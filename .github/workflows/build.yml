name: Build

on:
  push:
    branches:
      - 'beta'
    paths:
      - 'Plain Craft Launcher 2/**'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'Plain Craft Launcher 2/**'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.configuration }}-${{ matrix.architecture }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - configuration: Beta
            architecture: x64
            os: windows-latest
          - configuration: Beta
            architecture: ARM64
            os: self-hosted
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Check commit message for version pattern
      id: check_commit
      shell: bash
      run: |
        commit_msg=$(git log -1 --pretty=%B $GITHUB_SHA)
        if [[ $commit_msg =~ v2\.[0-9]+\.[0-9]+ ]]; then
          echo "valid=true" >> $GITHUB_OUTPUT
        else
          echo "valid=false" >> $GITHUB_OUTPUT
        fi

    - name: Set Describe
      if: steps.check_commit.outputs.valid == 'true'
      shell: powershell
      run: |
        $describe = $(git describe --tags --always)
        echo "describe=$describe" >> $GITHUB_ENV

    - name: Setup MSBuild.exe
      if: steps.check_commit.outputs.valid == 'true'
      uses: microsoft/setup-msbuild@v2
      with:
        msbuild-architecture: ${{ matrix.architecture }}

    - name: Update Help
      if: steps.check_commit.outputs.valid == 'true'
      run: |
        cd ..
        git clone https://github.com/PCL-Community/PCL2CEHelp -b master --single-branch --depth 1
        cd PCL2CEHelp
        rm -Force -r *.*
        Compress-Archive -Path .\* -DestinationPath .\Help.zip
        Copy-Item -Path .\Help.zip -Destination "${{ github.workspace }}\Plain Craft Launcher 2\Resources\Help.zip" -Force
        cd ..
        rm -Force -r .\PCL2CEHelp
        cd ${{ GITHUB.WORKSPACE }}

    - name: Restore NuGet Packages
      if: steps.check_commit.outputs.valid == 'true'
      run: nuget restore "Plain Craft Launcher 2\Plain Craft Launcher 2.vbproj" -PackagesDirectory "packages"

    - name: Replace Secrets and Commit Hash
      if: steps.check_commit.outputs.valid == 'true'
      run: |
        (gc "Plain Craft Launcher 2\Modules\ModSecret.vb") -replace 'Public Const OAuthClientId As String = ""', 'Public Const OAuthClientId As String = "${{ secrets.CLIENT_ID }}"' | Out-File "Plain Craft Launcher 2\Modules\ModSecret.vb"
        (gc "Plain Craft Launcher 2\Modules\ModSecret.vb") -replace 'Public Const CurseForgeAPIKey As String = ""', 'Public Const CurseForgeAPIKey As String = "${{ secrets.CURSEFORGE_API_KEY }}"' | Out-File "Plain Craft Launcher 2\Modules\ModSecret.vb"
        (gc "Plain Craft Launcher 2\Modules\ModSecret.vb") -replace 'Public Const LittleSkinClientId As String = ""', 'Public Const LittleSkinClientId As String = "${{ secrets.LITTLESKIN_CLIENT_ID }}"' | Out-File "Plain Craft Launcher 2\Modules\ModSecret.vb"
        (gc "Plain Craft Launcher 2\Modules\Base\ModBase.vb") -replace 'Public Const CommitHash As String = "native"', 'Public Const CommitHash As String = "${{ github.sha }}"' | Out-File "Plain Craft Launcher 2\Modules\Base\ModBase.vb"
        (gc "Plain Craft Launcher 2\Pages\PageOther\PageOtherAbout.xaml") -replace 'https://github.com/PCL-Community/PCL2-CE', 'https://github.com/PCL-Community/PCL2-CE/tree/${{ github.sha }}' | Out-File "Plain Craft Launcher 2\Pages\PageOther\PageOtherAbout.xaml"

    - name: Build
      if: steps.check_commit.outputs.valid == 'true'
      run: msbuild "Plain Craft Launcher 2\Plain Craft Launcher 2.vbproj" -p:Configuration=${{ matrix.configuration }} -p:Platform=${{ matrix.architecture }}

    - name: Upload a Build Artifact
      if: steps.check_commit.outputs.valid == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.configuration }}-${{ matrix.architecture }}
        path: Plain Craft Launcher 2\obj\${{ matrix.architecture }}\${{ matrix.configuration }}\Plain Craft Launcher 2.exe

    - name: Extract version from commit
      id: extract_version
      run: |
        VERSION=$(git log -1 --pretty=format:"%s" | Select-String -Pattern 'v2\.[0-9]+\.[0-9]+' -AllMatches | ForEach-Object { $_.Matches.Value })
        if (-not $VERSION) {
          echo "::error::未检测到有效的 2.x.x 版本号"
          exit 1
        }
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      id: create_release
      if: steps.extract_version.outputs.version
      env:
        GITHUB_TOKEN: ${{ secrets.BOT }}
      run: |
        RELEASE_JSON=$(cat <<EOF
        {
          "tag_name": "${{ steps.extract_version.outputs.version }}",
          "name": "${{ steps.extract_version.outputs.version }}",
          "target_commitish": "beta",
          "prerelease": true,
          "discussion_category_name": "公告",
          "body": "**这是默认的 Release 正文，请开发者及时补充更新日志**\n\n- 基于提交：${{ github.sha }}\n- 构建时间：$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
        }
        EOF
        )

        response=$(curl -sS -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Content-Type: application/json" \
          -d "$RELEASE_JSON" \
          "https://api.github.com/repos/${{ github.repository }}/releases")

        if echo "$response" | grep -q '"html_url"'; then
          echo "::notice::Release 创建成功：$(echo $response | jq -r .html_url)"
        else
          echo "::error::Release 创建失败：$response"
          exit 1
        fi

        UPLOAD_URL=$(echo "$response" | jq -r .upload_url | sed 's/{.*}//')
        echo "upload_url=$UPLOAD_URL" >> $GITHUB_OUTPUT

    - name: Download Build Artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.configuration }}-${{ matrix.architecture }}
        path: release-assets

    - name: Upload to GitHub Release
      if: steps.create_release.outputs.upload_url
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.BOT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release-assets/Plain Craft Launcher 2.exe
        asset_name: PlainCraftLauncher2-${{ steps.extract_version.outputs.version }}-${{ matrix.architecture }}.exe
        asset_content_type: application/octet-stream