name: Build

on:
  pull_request:
    branches:
      - beta
    types:
      - closed

jobs:
  build:
    name: Build ${{ matrix.configuration }}-${{ matrix.architecture }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.merged == true
    strategy:
      matrix:
        include:
          - configuration: Beta
            architecture: x64
            os: windows-latest
          - configuration: Release
            architecture: x64
            os: windows-latest
          - configuration: Beta
            architecture: ARM64
            os: self-hosted
          - configuration: Release
            architecture: ARM64
            os: self-hosted
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Debug Event Information
      shell: pwsh
      run: |
        Write-Host "Event Name: $env:GITHUB_EVENT_NAME"
        Write-Host "PR Number: $env:GITHUB_EVENT_PULL_REQUEST_NUMBER"
        Write-Host "PR Merged: $env:GITHUB_EVENT_PULL_REQUEST_MERGED"
        Write-Host "Base Ref: $env:GITHUB_BASE_REF"

    - name: Set Describe
      shell: pwsh
      run: |
          $describe = $(git describe --tags --always)
          echo "describe=$describe" >> $GITHUB_ENV

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2
      with:
        msbuild-architecture: ${{ matrix.architecture }}

    - name: Update Help
      shell: pwsh
      run: |
        cd ..
        git clone https://gh.llkk.cc/https://github.com/PCL-Community/PCL2CEHelp -b master --single-branch --depth 1
        cd PCL2CEHelp
        Remove-Item *.* -Recurse -Force
        Compress-Archive -Path .\* -DestinationPath .\Help.zip
        Copy-Item -Path .\Help.zip -Destination "${{ github.workspace }}\Plain Craft Launcher 2\Resources\Help.zip" -Force
        cd ..
        Remove-Item .\PCL2CEHelp -Recurse -Force
        cd ${{ GITHUB.WORKSPACE }}

    - name: Restore NuGet Packages
      shell: pwsh
      run: nuget restore "Plain Craft Launcher 2\Plain Craft Launcher 2.vbproj" -PackagesDirectory "packages"

    - name: Replace Secrets and Commit Hash
      shell: pwsh
      run: |
        (Get-Content "Plain Craft Launcher 2\Modules\ModSecret.vb") -replace 'Public Const OAuthClientId As String = ""', 'Public Const OAuthClientId As String = "${{ secrets.CLIENT_ID }}"' | Set-Content "Plain Craft Launcher 2\Modules\ModSecret.vb"
        (Get-Content "Plain Craft Launcher 2\Modules\ModSecret.vb") -replace 'Public Const CurseForgeAPIKey As String = ""', 'Public Const CurseForgeAPIKey As String = "${{ secrets.CURSEFORGE_API_KEY }}"' | Set-Content "Plain Craft Launcher 2\Modules\ModSecret.vb"
        (Get-Content "Plain Craft Launcher 2\Modules\ModSecret.vb") -replace 'Public Const LittleSkinClientId As String = ""', 'Public Const LittleSkinClientId As String = "${{ secrets.LITTLESKIN_CLIENT_ID }}"' | Set-Content "Plain Craft Launcher 2\Modules\ModSecret.vb"
        (Get-Content "Plain Craft Launcher 2\Modules\Base\ModBase.vb") -replace 'Public Const CommitHash As String = "native"', 'Public Const CommitHash As String = "${{ github.sha }}"' | Set-Content "Plain Craft Launcher 2\Modules\Base\ModBase.vb"
        (Get-Content "Plain Craft Launcher 2\Pages\PageOther\PageOtherAbout.xaml") -replace 'https://github.com/PCL-Community/PCL2-CE', 'https://github.com/PCL-Community/PCL2-CE/tree/${{ github.sha }}' | Set-Content "Plain Craft Launcher 2\Pages\PageOther\PageOtherAbout.xaml"

    - name: Build
      shell: pwsh
      run: msbuild "Plain Craft Launcher 2\Plain Craft Launcher 2.vbproj" -p:Configuration=${{ matrix.configuration }} -p:Platform=${{ matrix.architecture }}

    - name: Upload a Build Artifact
      id: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.configuration }}-${{ matrix.architecture }}
        path: Plain Craft Launcher 2\obj\${{ matrix.architecture }}\${{ matrix.configuration }}\Plain Craft Launcher 2.exe

    - name: Create or Update Release
      shell: pwsh
      env:
        GITHUB_TOKEN: ${{ secrets.BOT }}
      run: |
        $pr_number = $env:GITHUB_EVENT_PULL_REQUEST_NUMBER
        $response = Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/pulls/$pr_number" `
                                      -Headers @{
                                        Authorization = "token $env:GITHUB_TOKEN"
                                        Accept = "application/vnd.github.v3+json"
                                      }

        $pr_title = $response.title
        $pr_body = $response.body

        $tag_name = "Beta $($pr_title)"

        # Check if release already exists
        try {
          $existing_release = Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/releases/tags/$([uri]::EscapeDataString($tag_name))" `
                                               -Headers @{
                                                 Authorization = "token $env:GITHUB_TOKEN"
                                                 Accept = "application/vnd.github.v3+json"
                                               }
          # If release exists, update it
          $release_id = $existing_release.id
          $update_response = Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/releases/$release_id" `
                                              -Method Patch `
                                              -Body @{
                                                tag_name = $tag_name
                                                target_commitish = "beta"
                                                name = $pr_title
                                                body = $pr_body
                                                draft = $false
                                                prerelease = $true
                                              } | ConvertTo-Json -Depth 100
        } catch {
          # If release does not exist, create a new one
          $create_response = Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/releases" `
                                              -Method Post `
                                              -Body @{
                                                tag_name = $tag_name
                                                target_commitish = "beta"
                                                name = $pr_title
                                                body = $pr_body
                                                draft = $false
                                                prerelease = $true
                                              } | ConvertTo-Json -Depth 100
          $release_id = ($create_response | ConvertFrom-Json).id
        }

        # Upload artifacts to the release
        $asset_path = "$env:RUNNER_TEMP/artifact.zip"
        Compress-Archive -Path "Plain Craft Launcher 2\obj\${{ matrix.architecture }}\${{ matrix.configuration }}\Plain Craft Launcher 2.exe" -DestinationPath $asset_path -Force

        $upload_uri = "https://uploads.github.com/repos/${{ github.repository }}/releases/$release_id/assets?name=${{ matrix.configuration }}-${{ matrix.architecture }}.zip"
        $headers = @{
          Authorization = "token $env:GITHUB_TOKEN"
          "Content-Type" = "application/octet-stream"
        }
        Invoke-RestMethod -Uri $upload_uri -Method Post -Headers $headers -InFile $asset_path



